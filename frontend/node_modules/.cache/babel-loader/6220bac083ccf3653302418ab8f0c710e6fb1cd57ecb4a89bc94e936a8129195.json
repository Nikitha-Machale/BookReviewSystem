{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\OneDrive\\\\Desktop\\\\BookReviewSystem\\\\frontend\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    // Check for saved theme preference or default to light mode\n    const savedTheme = localStorage.getItem('theme');\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    if (savedTheme === 'dark' || !savedTheme && prefersDark) {\n      setIsDarkMode(true);\n      document.documentElement.classList.add('dark');\n    } else {\n      setIsDarkMode(false);\n      document.documentElement.classList.remove('dark');\n    }\n  }, []);\n  const toggleTheme = () => {\n    const newTheme = !isDarkMode;\n    setIsDarkMode(newTheme);\n    if (newTheme) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  };\n  const value = {\n    isDarkMode,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","document","documentElement","classList","add","remove","toggleTheme","newTheme","setItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rohit/OneDrive/Desktop/BookReviewSystem/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check for saved theme preference or default to light mode\r\n    const savedTheme = localStorage.getItem('theme');\r\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n    if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {\r\n      setIsDarkMode(true);\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      setIsDarkMode(false);\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n  }, []);\r\n\r\n  const toggleTheme = () => {\r\n    const newTheme = !isDarkMode;\r\n    setIsDarkMode(newTheme);\r\n\r\n    if (newTheme) {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.setItem('theme', 'dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.setItem('theme', 'light');\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    isDarkMode,\r\n    toggleTheme\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnDE,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAE7E,IAAIN,UAAU,KAAK,MAAM,IAAK,CAACA,UAAU,IAAIG,WAAY,EAAE;MACzDJ,aAAa,CAAC,IAAI,CAAC;MACnBQ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLX,aAAa,CAAC,KAAK,CAAC;MACpBQ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAG,CAACf,UAAU;IAC5BC,aAAa,CAACc,QAAQ,CAAC;IAEvB,IAAIA,QAAQ,EAAE;MACZN,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC9CT,YAAY,CAACa,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC,CAAC,MAAM;MACLP,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;MACjDV,YAAY,CAACa,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxC;EACF,CAAC;EAED,MAAMC,KAAK,GAAG;IACZjB,UAAU;IACVc;EACF,CAAC;EAED,oBACErB,OAAA,CAACC,YAAY,CAACwB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EACjCA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACvB,GAAA,CAxCWF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}